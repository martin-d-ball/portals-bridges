<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project default="java:jar"
         xmlns:j="jelly:core"
         xmlns:maven="jelly:maven"
         xmlns:ant="jelly:ant">

  <goal name="_findProjectFile">
    <j:set var="_projectFileFound" value="false"/>
    <j:set var="_projectFile" value=""/>
    <j:set var="myPom" value="${pom}"/>
    <j:while test="${myPom!=null}">
      <j:set var="pomDir" value="${myPom.file.parent}"/>
      <j:new var="file" className="java.io.File">
        <j:arg value="${pomDir}/${_findProjectFile}"/>
      </j:new>
      <j:if test="${file.exists()}">
        <j:set var="_projectFile" value="${file}"/>
        <j:set var="_projectFileFound" value="true"/>
        <j:break/>
      </j:if>
      <j:set var="myPom" value="${myPom.parent}"/>
    </j:while>
  </goal>

  <goal name="set.checkstyle.properties">

    <j:set var="_findProjectFile" value="${org.apache.portals.bridges.checkstyle.header.file}"/>
    <attainGoal name="_findProjectFile"/>
    <j:if test="${!_projectFileFound}">
      <fail message="org.apache.portals.bridges.checkstyle.header.file ${org.apache.portals.bridges.checkstyle.header.file} not found in the project tree"/>
    </j:if>
    <j:set var="maven.checkstyle.header.file" value="${_projectFile.absolutePath}"/>
    <echo message="using maven.checkstyle.header.file ${maven.checkstyle.header.file}"/>

    <j:set var="_findProjectFile" value="${org.apache.portals.bridges.checkstyle.properties}"/>
    <attainGoal name="_findProjectFile"/>
    <j:if test="${!_projectFileFound}">
      <fail message="org.apache.portals.bridges.checkstyle.properties ${org.apache.portals.bridges.checkstyle.properties} not found in the project tree"/>
    </j:if>
    <j:set var="maven.checkstyle.properties" value="${_projectFile.absolutePath}"/>
    <echo message="using maven.checkstyle.properties ${maven.checkstyle.properties}"/>
  </goal>

  <goal name="set.license.properties">

    <j:set var="_findProjectFile" value="${org.apache.portals.bridges.license.licenseFile}"/>
    <attainGoal name="_findProjectFile"/>
    <j:if test="${!_projectFileFound}">
      <fail message="org.apache.portals.bridges.license.licenseFile ${org.apache.portals.bridges.license.licenseFile} not found in the project tree"/>
    </j:if>
    <j:set var="maven.license.licenseFile" value="${_projectFile.absolutePath}"/>
    <echo message="using maven.license.licenseFile ${maven.license.licenseFile}"/>

  </goal>

  <preGoal name="checkstyle:init">
    <attainGoal name="set.checkstyle.properties"/>
    <attainGoal name="set.license.properties"/>
  </preGoal>

  
  <goal name="allClean">
    <j:set var="maven.multiproject.ignoreFailures" value="true"/>
    <attainGoal name="multiproject:clean"/>
    <attainGoal name="clean"/>
    <j:set var="maven.multiproject.ignoreFailures" value="false"/>
  </goal>

  <goal name="allBuild">
    <attainGoal name="multiproject:install"/>
  </goal>

  <goal name="allSite">

    <attainGoal name="set.checkstyle.properties"/>
    <attainGoal name="set.license.properties"/>
    <!-- build up collection of multiprojects -->
    <maven:reactor
                  basedir="${basedir}"
                  banner="Gathering project list"
                  includes="${maven.multiproject.includes}"
                  excludes="${maven.multiproject.excludes}"
                  postProcessing="true"
                  collectOnly="true"
                  collectionVar="multiprojects"
                  ignoreFailures="${maven.multiproject.ignoreFailures}"
                  />
    <j:forEach var="reactorProject" items="${multiprojects}">
      <j:set var="directory" value="${maven.docs.dest}/${maven.multiproject.aggregateDir}${reactorProject.artifactId}"/>
      <mkdir dir="${directory}"/>
      <j:set var="fromDir" value="${reactorProject.context.getVariable('maven.docs.dest')}"/>
      <mkdir dir="${fromDir}"/>
      <copy toDir="${directory}">
        <fileset dir="${fromDir}"/>
      </copy>
      <copy toDir="${directory}/style">
        <fileset dir="${basedir}/xdocs/style"/>
      </copy>
      <copy toDir="${directory}/images">
        <fileset dir="${basedir}/xdocs/images"/>
      </copy>
    </j:forEach>

    <attainGoal name="multiproject:site"/>
  </goal>

</project>
