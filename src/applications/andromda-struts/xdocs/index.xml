<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  
  $Id: index.xml 547187 2007-06-14 09:05:19Z ate $
-->
<document>
  <properties>
    <title>Features of the Andromda Struts Portlet Demo</title>
    <subtitle></subtitle>
    <authors>
      <person name="Philip Mark Donaghy" email="pmd@apache.org" />
    </authors>
  </properties>
  <body>
    <section name="Features of the Andromda Struts Portlet Demo">
      <p>
        The Andromda Struts demo portlet uses the Struts Bridge. This
        demo provides tips, hints, and tricks necessary to run portlet
        applications created using the Andromda BPM4Struts cartridge.
        Page flow is defined using UML activity diagrams. The project
        framework is generated using
        <a href="http://galaxy.andromda.org/docs-3.2/">Andromda 3.2</a>
        . The original project is based on the
        <a
          href="http://galaxy.andromda.org/docs-3.2/andromda-maven-plugins/index.html">
          Andromda Maven 2 plugin
        </a>
        .
        <ul>
          <li>
            <a href="#Andromda Overview">An Andromda MDA overview</a>
          </li>
          <li>
            <a href="#Andromda BPM4Struts Cartridge">
              The Andromda BPM4Struts Catridge
            </a>
          </li>
          <li>
            <a href="#Merge Mappings and Merge Locations">
              Merge Mappings and Merge Locations
            </a>
          </li>
          <li>
            <a href="#Portlet Modes">View, Edit, and Help modes</a>
          </li>
          <li>
            <a href="#Controller">
              A controller is defined by a UML entity of type Class
            </a>
          </li>
          <li>
            <a href="#View">
              The application view is defined as a UML entity of type
              ActionState
            </a>
          </li>
          <li>
            <a href="#Displaytag Support">
              Displaytag 1.1 supports the portlet specification
            </a>
          </li>
          <li>
            <a href="#Spring Services">TODO</a>
          </li>
          <li>Supports Struts release 1.2.7 and Andromda 3.2</li>
        </ul>
      </p>
      <subsection name="Andromda Overview">
        <p>
          <a href="http://www.andromda.org/">Andromda</a>
          is a code generator for Model Driven Software Development and
          Model Driven Architecture.
        </p>
        <p>
          Using UML entities one can model an applications page flow,
          services, and entities in an platform independent way.
        </p>
        <p>
          Cartridges are platform specific templates and metaobjects
          used to interpret the models. Andromda comes with cartridges
          for Java, EJB, Struts, JSF, .Net, and Spring.
        </p>
      </subsection>
      <subsection name="Andromda BPM4Struts Cartridge">
        <p>
          The
          <a
            href="http://galaxy.andromda.org/docs-3.2/andromda-cartridges/index.html">
            BPM4Struts cartridge
          </a>
          generates a Struts pattern for page flow and form input and
          validation from UML activity diagrams.
        </p>
        <p>A Use Case is modeled as a point of entry.</p>
        <p>
          Each Activity Diagram defines a starting point which indicates
          the start of Use Case execution.
        </p>
        <p>One or more Action States defers to business logic.</p>
        <p>
          One or more Action States defined as a FrontEndView stereotype
          represent the page views.
        </p>
        <p>
          Forms are defined using a Signal Event by which each parameter
          can be typed and validated.
        </p>
        <p>
          End points are used to indicate which Use Case is executed
          next.
        </p>
      </subsection>
      <subsection name="Merge Mappings and Merge Locations">
        <p>
          Customizing a cartridge is done by adding Merge Mappings and
          or Merge Locations. They are the most common method used to
          modify the default cartridge output.
        </p>
        <p>
          Merge mappings replace or inject template code in the default
          cartridge templates.
        </p>
        <p>
          Merge locations define directories where entire templates can
          replace the default templates used to generate code.
        </p>
      </subsection>
      <subsection name="Portlet Modes">
        <p>
          The BPM4Struts cartridge provides help documentation for each
          of the use cases defined. The demo points the Help mode to
          this action displaying Use Case documentation describing the
          application.
        </p>
        <p>
          Any Use Case can be specified for other portlet modes. The
          demo points the Edit mode to an appropriate Use Case.
        </p>
      </subsection>
      <subsection name="Controller">
        <p>
          A controller is defined in UML and is used to execute business
          logic.
        </p>
        <p>
          The controller is associated with an activity diagram. Any
          operation defined can be called by a Action State entity in
          the associated activity diagram. Each controller operation
          argument is represented by Struts form property if the Action
          State is modeled before a page view.
        </p>
        <p>
          Andromda generates a class where project developers implement
          the logic associated with controller operations.
        </p>
      </subsection>
      <subsection name="View">
        <p>
          Views are defined using the
          <code>FrontEndView</code>
          meta model stereotype.
        </p>
      </subsection>
      <subsection name="Displaytag Support">
        <p>
          The
          <a href="http://www.displaytag.org/">Displaytag project</a>
          tag libraries are used by the demo for presenting data in a
          table view.
        </p>
        <p>
          See the
          <a
            href="http://svn.apache.org/repos/asf/portals/bridges/trunk/applications/andromda-struts/mda/src/main/config/mergeLocation/templates/bpm4struts/messages/displaytag.properties.vsl">
            displaytag.properties.vsl
          </a>
          template for defining project properties such as sorting and
          presentation features.
        </p>
      </subsection>
      <subsection name="Spring Services">
        <p>
          TODO: Include support for modeling Spring services and Object
          Relational Mapping of Entities
        </p>
      </subsection>
    </section>
  </body>
</document>